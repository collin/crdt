require 'crdt'
# This file was generated by the `rspec --init` command. Conventionally, all
# specs live under a `spec` directory, which RSpec adds to the `$LOAD_PATH`.
# Require this file using `require "spec_helper"` to ensure that it is only
# loaded once.
#
# See http://rubydoc.info/gems/rspec-core/RSpec/Core/Configuration
require "hirb"
require "eventmachine"
include Hirb::Console
RSpec.configure do |config|
  config.treat_symbols_as_metadata_keys_with_true_values = true
  config.run_all_when_everything_filtered = true
  config.filter_run :focus

  # Run specs in random order to surface order dependencies. If you find an
  # order dependency and want to debug it, you can fix the order by providing
  # the seed, which is printed after each run.
  #     --seed 1234
  config.order = 'random'
end

def Object.commute(test, *operations, &block)
  operations.permutation.each_with_index do |perm, index|
    it "#{test} ( permutation #{index} )" do
      perm.each{|operation| instance_exec(&operation) }
      instance_exec(&block)
    end
  end
end

module AtomSpecHelper
  def self.included(_module)
    _module.instance_eval do
      %w(atom atom1 atom2).each do |id|
        let(id) { CRDT::Atom.new id }
      end
    end
  end
end

def EM.stop_when_done
  EM.next_tick do
    if  @next_tick_queue.first
      EM.next_tick { EM.stop_when_done }
    else
      stop
    end
  end
end

def EM.nth_random_tick(step=nil, depth=nil, count=10, &block)
  unless step
    step = 0
    depth = rand(count)
  end

  if step == depth
    block.call
  else
    EM.next_tick{ nth_random_tick(step + 1, depth, count, &block) }
  end
end

class CRDT::Atom
  def synchronize(operation, *args)
    EM.nth_random_tick(nil, nil, 20) do
      send operation, *(args << false) # Don't rebroadcast        
    end
  end
end
